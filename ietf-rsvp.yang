module ietf-rsvp {

    namespace "urn:ietf:params:xml:ns:yang:ietf-rsvp";

    /* Replace with IANA when assigned */
    prefix "rsvp";

    /* import ietf-inet-types { prefix inet; } */
    import ietf-interfaces {
        prefix "if";
    }

    import ietf-inet-types {
        prefix inet;
    }

    organization
        "IETF TEAS Working Group";

    contact "TBA";

    description
        "This module contains the RSVP YANG data model.";

    revision 2015-06-08 {
        description "Latest revision of RSVP yang module.";
        reference "RFC2205";
    }

    /* RSVP features */
    feature authentication {
        description
            "Indicates support for RSVP authentication";
    }

    feature graceful-restart {
        description
            "Indicates support for RSVP graceful restart";
    }

    feature refresh-reduction {
        description
            "Indicates support for RSVP refresh reduction";
    }

    feature hellos {
        description
            "Indicates support for RSVP hellos";
    }

    grouping graceful-restart_config {
        description
              "Configuration parameters relating to RSVP
               Graceful-Restart";
        leaf restart-time {
            type uint32;
            description
                "Graceful restart time (seconds).";
            reference
                "RFC 5495: Description of the Resource
                Reservation Protocol - Traffic-Engineered
                (RSVP-TE) Graceful Restart Procedures";
        }
        leaf recovery-time {
            type uint32;
            description
                "RSVP state recovery time";
        }
    }

    grouping graceful-restart {
        description
            "Top level grouping for RSVP graceful-restart
             parameters";
        container graceful-restart {
            if-feature graceful-restart;
            presence "Enable RSVP graceful restart on the node.";
            description
                "Top level container for RSVP graceful-restart";
            container config {
                description
                    "Configuration parameters relating to
                     graceful-restart";
                uses graceful-restart_config;
            }
            container state {
                config false;
                description
                    "State information associated with RSVP
                     graceful-restart";
                uses graceful-restart_config;
            }
        }
    }

    grouping authentication_config {
        description
              "Configuration parameters relating to RSVP
               authentication";
        choice authentication-type {
        description
            "RSVP authentication choices";
        case string {
            leaf secret {
                type string;
                description
                    "A MD5 authentication string";
            }
        }
        case key-chain {
            if-feature authentication;
            description
                "Configure RSVP authentication.";
            leaf key-chain {
                type string {
                     length "1..32";
                }
                description
                    "Key chain name to authenticate RSVP
                     signaling messages.";
                reference
                    "RFC 2747: RSVP Cryptographic
                     Authentication";
            }
            leaf lifetime {
                type uint32 {
                     range "30..86400";
                }
                description
                    "Life time for each security association";
                reference
                    "RFC 2747: RSVP Cryptographic
                     Authentication";
            }
            leaf window-size {
                type uint32 {
                    range "1..64";
                }
                description
                    "Window-size to limit number of out-of-order
                    messages.";
                reference
                    "RFC 2747: RSVP Cryptographic
                     Authentication";
            }
            leaf challenge {
                type empty;
                description
                    "Enable challenge messages.";
                reference
                    "RFC 2747: RSVP Cryptographic
                     Authentication";
            }
            leaf retransmits {
                type uint32 {
                    range "1..10000";
                }
                description
                    "Number of retransmits when messages are
                     dropped.";
                reference
                    "RFC 2747: RSVP Cryptographic
                     Authentication";
            }
        }
        }
    }

    grouping authentication {
        description
            "Top level grouping for RSVP authentication parameters";
        container authentication {
            if-feature authentication;
            description
                "Top level container for RSVP authentication
                 parameters";
            container config {
                description
                    "Configuration parameters relating to
                     RSVP authentication";
                uses authentication_config;
            }
            container state {
                config false;
                description
                    "State information associated with RSVP
                     authentication";
                uses authentication_config;
            }
        }
    }

    grouping rsvp-hellos_config {
        description
              "Configuration parameters relating to RSVP
               hellos";
        leaf interface-based {
             type empty;
             description "Enable interface-based
                          Hello adjacency if present.";
        }
        leaf hello-interval {
            type uint32 {
                range "3000..30000";
            }
            description
                "Configure interval between successive Hello
                messages in milliseconds.";
            reference
                "RFC 3209: RSVP-TE: Extensions to RSVP for
                LSP Tunnels.
                RFC 5495: Description of the Resource
                Reservation Protocol - Traffic-Engineered
                (RSVP-TE) Graceful Restart Procedures";
        }
        leaf hello-misses {
            type uint32 {
                 range "1..10";
            }
            description
                "Configure max number of consecutive missed
                Hello messages.";
            reference
                "RFC 3209: RSVP-TE: Extensions to RSVP for
                LSP Tunnels RFC 5495: Description of the
                Resource Reservation Protocol - Traffic-
                Engineered (RSVP-TE) Graceful Restart
                Procedures";
        }
    }

    grouping rsvp-hellos {
        description
            "Top level grouping for RSVP hellos parameters";
        container rsvp-hellos {
            if-feature hellos;
            description
                "Top level container for RSVP hello parameters";
            container config {
                description
                    "Configuration parameters relating to
                     RSVP hellos";
                uses rsvp-hellos_config;
            }
            container state {
                config false;
                description
                    "State information associated with RSVP
                     hellos";
                uses rsvp-hellos_config;
            }
        }
    }

    grouping signaling-parameters_config {
        description
              "Configuration parameters relating to RSVP
               signaling";
        leaf refresh-interval {
            type uint32;
            description
                "Set interval between successive refreshes";
        }
        leaf refresh-misses {
            type uint32;
            description
                "Set max number of consecutive missed
                 messages for state expiry";
        }
        leaf checksum {
            type uint32;
            description
                "Enable RSVP message checksum computation";
        }
        leaf patherr-state-removal {
            type empty;
            description
                "State-Removal flag in Path Error message
                if present.";
        }
    }

    grouping signaling-parameters {
        description
            "Top level grouping for RSVP signaling  parameters";
        container signaling-parameters {
            description
                "Top level container for RSVP signaling parameters";
            container config {
                description
                    "Configuration parameters relating to
                     RSVP signaling parameters";
                uses signaling-parameters_config;
            }
            container state {
                config false;
                description
                    "State information associated with RSVP
                     signaling parameters";
                uses signaling-parameters_config;
            }
        }
    }


    grouping refresh-reduction_config {
        description
              "Configuration parameters relating to RSVP
               refresh reduction";
        leaf bundle-message-max-size {
            type uint32 {
                range "512..65000";
            }
            description
                "Configure maximum size (bytes) of a
                 single RSVP Bundle message.";
        }
        leaf disable {
            type empty;
            description
                "Disable refresh reduction if present.";
        }
        leaf reliable-ack-hold-time {
            type uint32 {
                range "100..5000";
            }
            description
                "Configure hold time in milliseconds for
                sending RSVP ACK message(s).";
        }
        leaf reliable-ack-max-size {
            type uint32 {
                range "20..65000";
            }
            description
                "Configure max size of a single RSVP ACK
                message.";
        }
        leaf reliable-retransmit-time {
            type uint32 {
                range "100..10000";
            }
            description
                "Configure min delay in milliseconds to
                 wait for an ACK before a retransmit.";
        }
        leaf reliable-srefresh {
            type empty;
            description
                "Configure use of reliable messaging for
                summary refresh if present.";
        }
        leaf summary-max-size {
            type uint32 {
                range "20..65000";
            }
            description
                "Configure max size (bytes) of a single
                 RSVP summary refresh message.";
        }
    }

    grouping refresh-reduction {
        description
            "Top level grouping for RSVP refresh reduction
             parameters";
        container refresh-reduction {
            if-feature refresh-reduction;
            description
                "Top level container for RSVP refresh reduction
                 parameters";
            container config {
                description
                    "Configuration parameters relating to
                     RSVP refresh reduction";
                uses refresh-reduction_config;
            }
            container state {
                config false;
                description
                    "State information associated with RSVP
                     refresh reduction";
                uses refresh-reduction_config;
            }
        }
    }

    container rsvp {
        presence "Enable RSVP feature";
        description "RSVP feature container";
        container globals {
            description "RSVP global properties.";
            uses graceful-restart;
        }

        container interfaces {
            description
                "RSVP interfaces container";
            uses signaling-parameters;
            uses refresh-reduction;
            uses rsvp-hellos;
            uses authentication;

            list interface {
                key "interface";
                description
                    "RSVP interfaces.";
                leaf interface {
                     type if:interface-ref;
                     description
                        "RSVP interface.";
                }
                uses signaling-parameters;
                uses refresh-reduction;
                uses rsvp-hellos;
                uses authentication;
            }
        }

        container sessions {
            description
                "RSVP sessions container";
            list session {
                key "src_port dst_port source destination";
                description
                    "List of RSVP sessions";
                leaf src_port {
                    type uint16;
                    description "RSVP source port";
                    reference "RFC2205";
                }
                leaf dst_port {
                    type uint16;
                    description "RSVP destination port";
                    reference "RFC2205";
                }
                leaf source {
                    type inet:ip-address;
                    description "RSVP source address";
                    reference "RFC2205";
                }
                leaf destination {
                    type inet:ip-address;
                    description "RSVP destination address";
                    reference "RFC2205";
                }
            }
        }

        container neighbors {
            description
                "RSVP neighbors container";
            list neighbor {
                key "address";
                description
                    "List of RSVP neighbors";
                leaf address {
                    type inet:ip-address;
                    description
                        "Neighbor address";
                }
            }
        }

        container interface-state {
            config "false";
            description
                "RSVP interfaces state";
            list interface {
                key "interface";
                description
                    "RSVP interfaces.";
                leaf interface {
                     type if:interface-ref;
                     description
                        "RSVP interface.";
                }
            }
        }

        container sessions-state {
            config "false";
            description
                "RSVP sessions state";
            list session {
                key "src_port dst_port source destination";
                description
                    "List of RSVP sessions";
                leaf src_port {
                    type uint16;
                    description "RSVP source port";
                    reference "RFC2205";
                }
                leaf dst_port {
                    type uint16;
                    description "RSVP destination port";
                    reference "RFC2205";
                }
                leaf source {
                    type inet:ip-address;
                    description "RSVP source address";
                    reference "RFC2205";
                }
                leaf destination {
                    type inet:ip-address;
                    description "RSVP destination address";
                    reference "RFC2205";
                }
            }
        }

        container neighbors-state {
            config "false";
            description
                "RSVP neighbors state";
            list neighbor {
                key "address";
                description
                    "List of RSVP neighbors";
                leaf address {
                    type inet:ip-address;
                    description
                        "Neighbor address";
                }
            }
        }
    }
}
