module: ietf-te
   +--rw te!
      +--rw globals
      |  +--rw named-admin-groups
      |  |  +--rw config
      |  |  |  +--rw named-admin-groups* [name] {ietf-te-types:extended-admin-groups,ietf-te-types:named-extended-admin-groups}?
      |  |  |     +--rw name     string
      |  |  |     +--rw group?   ietf-te-types:admin-groups
      |  |  +--ro state
      |  |     +--ro named-admin-groups* [name] {ietf-te-types:extended-admin-groups,ietf-te-types:named-extended-admin-groups}?
      |  |        +--ro name     string
      |  |        +--ro group?   ietf-te-types:admin-groups
      |  +--rw named-srlgs
      |  |  +--rw config
      |  |  |  +--rw named-srlgs* [name] {ietf-te-types:named-srlg-groups}?
      |  |  |     +--rw name     string
      |  |  |     +--rw group?   ietf-te-types:srlg
      |  |  +--ro state
      |  |     +--ro named-srlgs* [name] {ietf-te-types:named-srlg-groups}?
      |  |        +--ro name     string
      |  |        +--ro group?   ietf-te-types:srlg
      |  +--rw named-explicit-paths
      |  |  +--rw config
      |  |  |  +--rw named-explicit-paths* [name]
      |  |  |     +--rw name                      string
      |  |  |     +--rw explicit-route-objects* [index]
      |  |  |        +--rw index                   uint8
      |  |  |        +--rw (type)?
      |  |  |        |  +--:(ipv4-address)
      |  |  |        |  |  +--rw v4-address?             inet:ipv4-address
      |  |  |        |  |  +--rw v4-prefix-length?       uint8
      |  |  |        |  |  +--rw v4-loose?               boolean
      |  |  |        |  +--:(ipv6-address)
      |  |  |        |  |  +--rw v6-address?             inet:ipv6-address
      |  |  |        |  |  +--rw v6-prefix-length?       uint8
      |  |  |        |  |  +--rw v6-loose?               boolean
      |  |  |        |  +--:(as-number)
      |  |  |        |  |  +--rw as-number?              uint16
      |  |  |        |  +--:(unnumbered-link)
      |  |  |        |  |  +--rw router-id?              inet:ip-address
      |  |  |        |  |  +--rw interface-id?           uint32
      |  |  |        |  +--:(label)
      |  |  |        |     +--rw value?                  uint32
      |  |  |        +--rw explicit-route-usage?   identityref
      |  |  +--ro state
      |  |     +--ro named-explicit-paths* [name]
      |  |        +--ro name                      string
      |  |        +--ro explicit-route-objects* [index]
      |  |           +--ro index                   uint8
      |  |           +--ro (type)?
      |  |           |  +--:(ipv4-address)
      |  |           |  |  +--ro v4-address?             inet:ipv4-address
      |  |           |  |  +--ro v4-prefix-length?       uint8
      |  |           |  |  +--ro v4-loose?               boolean
      |  |           |  +--:(ipv6-address)
      |  |           |  |  +--ro v6-address?             inet:ipv6-address
      |  |           |  |  +--ro v6-prefix-length?       uint8
      |  |           |  |  +--ro v6-loose?               boolean
      |  |           |  +--:(as-number)
      |  |           |  |  +--ro as-number?              uint16
      |  |           |  +--:(unnumbered-link)
      |  |           |  |  +--ro router-id?              inet:ip-address
      |  |           |  |  +--ro interface-id?           uint32
      |  |           |  +--:(label)
      |  |           |     +--ro value?                  uint32
      |  |           +--ro explicit-route-usage?   identityref
      |  +--rw named-path-constraints
      |     +--rw config
      |     |  +--rw named-path-constraints* [name] {ietf-te-types:named-path-constraints}?
      |     |     +--rw name              string
      |     |     +--rw path-selection
      |     |        +--rw topology?                 topology-id
      |     |        +--rw cost-limit?               uint32
      |     |        +--rw hop-limit?                uint8
      |     |        +--rw metric-type?              identityref
      |     |        +--rw tiebreaker-type?          identityref
      |     |        +--rw ignore-overload?          boolean
      |     |        +--rw tunnel-path-affinities {named-path-affinities}?
      |     |        |  +--rw (style)?
      |     |        |     +--:(values)
      |     |        |     |  +--rw value?         uint32
      |     |        |     |  +--rw mask?          uint32
      |     |        |     +--:(named)
      |     |        |        +--rw constraints* [usage]
      |     |        |           +--rw usage         identityref
      |     |        |           +--rw constraint
      |     |        |              +--rw affinity-names* [name]
      |     |        |                 +--rw name    string
      |     |        +--rw tunnel-path-srlgs
      |     |           +--rw (style)?
      |     |              +--:(values)
      |     |              |  +--rw usage?         identityref
      |     |              |  +--rw values*        srlg
      |     |              +--:(named)
      |     |                 +--rw constraints* [usage]
      |     |                    +--rw usage         identityref
      |     |                    +--rw constraint
      |     |                       +--rw srlg-names* [name]
      |     |                          +--rw name    string
      |     +--ro state
      |        +--ro named-path-constraints* [name] {ietf-te-types:named-path-constraints}?
      |           +--ro name              string
      |           +--ro path-selection
      |              +--ro topology?                 topology-id
      |              +--ro cost-limit?               uint32
      |              +--ro hop-limit?                uint8
      |              +--ro metric-type?              identityref
      |              +--ro tiebreaker-type?          identityref
      |              +--ro ignore-overload?          boolean
      |              +--ro tunnel-path-affinities {named-path-affinities}?
      |              |  +--ro (style)?
      |              |     +--:(values)
      |              |     |  +--ro value?         uint32
      |              |     |  +--ro mask?          uint32
      |              |     +--:(named)
      |              |        +--ro constraints* [usage]
      |              |           +--ro usage         identityref
      |              |           +--ro constraint
      |              |              +--ro affinity-names* [name]
      |              |                 +--ro name    string
      |              +--ro tunnel-path-srlgs
      |                 +--ro (style)?
      |                    +--:(values)
      |                    |  +--ro usage?         identityref
      |                    |  +--ro values*        srlg
      |                    +--:(named)
      |                       +--ro constraints* [usage]
      |                          +--ro usage         identityref
      |                          +--ro constraint
      |                             +--ro srlg-names* [name]
      |                                +--ro name    string
      +--rw interfaces
      |  +--rw interface* [interface]
      |     +--rw interface                 if:interface-ref
      |     +--rw te-metric
      |     |  +--rw config
      |     |  |  +--rw te-metric?   ietf-te-types:te-metric
      |     |  +--ro state
      |     |     +--ro te-metric?   ietf-te-types:te-metric
      |     +--rw te-admin-groups
      |     |  +--rw config
      |     |  |  +--rw (admin-group-type)?
      |     |  |     +--:(value-admin-groups)
      |     |  |     |  +--rw (value-admin-group-type)?
      |     |  |     |     +--:(value-admin-groups)
      |     |  |     |     |  +--rw admin-group?            ietf-te-types:admin-group
      |     |  |     |     +--:(value-extended-admin-groups) {ietf-te-types:extended-admin-groups}?
      |     |  |     |        +--rw extended-admin-group?   ietf-te-types:extended-admin-group
      |     |  |     +--:(named-admin-groups)
      |     |  |        +--rw named-admin-groups* [named-admin-group] {ietf-te-types:extended-admin-groups,ietf-te-types:named-extended-admin-groups}?
      |     |  |           +--rw named-admin-group    leafref
      |     |  +--ro state
      |     |     +--ro (admin-group-type)?
      |     |        +--:(value-admin-groups)
      |     |        |  +--ro (value-admin-group-type)?
      |     |        |     +--:(value-admin-groups)
      |     |        |     |  +--ro admin-group?            ietf-te-types:admin-group
      |     |        |     +--:(value-extended-admin-groups) {ietf-te-types:extended-admin-groups}?
      |     |        |        +--ro extended-admin-group?   ietf-te-types:extended-admin-group
      |     |        +--:(named-admin-groups)
      |     |           +--ro named-admin-groups* [named-admin-group] {ietf-te-types:extended-admin-groups,ietf-te-types:named-extended-admin-groups}?
      |     |              +--ro named-admin-group    leafref
      |     +--rw te-srlgs
      |     |  +--rw config
      |     |  |  +--rw (srlg-type)?
      |     |  |     +--:(value-srlgs)
      |     |  |     |  +--rw values* [value]
      |     |  |     |     +--rw value    uint32
      |     |  |     +--:(named-srlgs)
      |     |  |        +--rw named-srlgs* [named-srlg] {ietf-te-types:named-srlg-groups}?
      |     |  |           +--rw named-srlg    leafref
      |     |  +--ro state
      |     |     +--ro (srlg-type)?
      |     |        +--:(value-srlgs)
      |     |        |  +--ro values* [value]
      |     |        |     +--ro value    uint32
      |     |        +--:(named-srlgs)
      |     |           +--ro named-srlgs* [named-srlg] {ietf-te-types:named-srlg-groups}?
      |     |              +--ro named-srlg    leafref
      |     +--rw te-switching-cap
      |     |  +--rw config
      |     |  |  +--rw switching-capabilities* [switching-capability]
      |     |  |     +--rw switching-capability    identityref
      |     |  |     +--rw encoding?               identityref
      |     |  +--ro state
      |     |     +--ro switching-capabilities* [switching-capability]
      |     |        +--ro switching-capability    identityref
      |     |        +--ro encoding?               identityref
      |     +--rw te-flooding-parameters
      |        +--rw config
      |        |  +--rw thresholds
      |        |     +--rw (type)?
      |        |        +--:(equal-steps)
      |        |        |  +--rw (equal-step-type)?
      |        |        |     +--:(up-down-different-step)
      |        |        |     |  +--rw up-step?      uint8
      |        |        |     |  +--rw down-step?    uint8
      |        |        |     +--:(up-down-same-step)
      |        |        |        +--rw step?         uint8
      |        |        +--:(unequal-steps)
      |        |           +--rw up-steps* [value]
      |        |           |  +--rw value    uint8
      |        |           +--rw down-steps* [value]
      |        |              +--rw value    uint8
      |        +--ro state
      |           +--ro thresholds
      |              +--ro (type)?
      |                 +--:(equal-steps)
      |                 |  +--ro (equal-step-type)?
      |                 |     +--:(up-down-different-step)
      |                 |     |  +--ro up-step?      uint8
      |                 |     |  +--ro down-step?    uint8
      |                 |     +--:(up-down-same-step)
      |                 |        +--ro step?         uint8
      |                 +--:(unequal-steps)
      |                    +--ro up-steps* [value]
      |                    |  +--ro value    uint8
      |                    +--ro down-steps* [value]
      |                       +--ro value    uint8
      +--rw tunnels
      |  +--rw tunnel* [name type]
      |     +--rw name                 string
      |     +--rw type                 identityref
      |     +--rw identifier?          uint16
      |     +--rw tunnel-properties
      |        +--rw config
      |        |  +--rw description?            string
      |        |  +--rw admin-status?           identityref
      |        |  +--rw (routing-choice)?
      |        |  |  +--:(autoroute)
      |        |  |  |  +--rw autoroute-announce!
      |        |  |  |     +--rw routing-afs*       inet:ip-version
      |        |  |  |     +--rw (metric-type)?
      |        |  |  |        +--:(metric)
      |        |  |  |        |  +--rw metric?            uint32
      |        |  |  |        +--:(relative-metric)
      |        |  |  |        |  +--rw relative-metric?   int32
      |        |  |  |        +--:(absolute-metric)
      |        |  |  |           +--rw absolute-metric?   uint32
      |        |  |  +--:(forwarding-adjacency)
      |        |  |     +--rw forwarding-adjacency!
      |        |  |        +--rw holdtime?      uint32
      |        |  |        +--rw routing-afs*   inet:ip-version
      |        |  +--rw forwarding
      |        |  |  +--rw load-share?   uint32
      |        |  |  +--rw (policy-type)?
      |        |  |     +--:(class)
      |        |  |     |  +--rw class
      |        |  |     |     +--rw class?   uint8
      |        |  |     +--:(group)
      |        |  |        +--rw group
      |        |  |           +--rw classes*   uint8
      |        |  +--rw bidirectional
      |        |  |  +--rw association
      |        |  |     +--rw id?              uint16
      |        |  |     +--rw source?          inet:ip-address
      |        |  |     +--rw global-source?   inet:ip-address
      |        |  |     +--rw type?            identityref
      |        |  |     +--rw provisioing?     identityref
      |        |  +--rw (path-type)?
      |        |     +--:(p2p)
      |        |     |  +--rw destination?            inet:ip-address
      |        |     |  +--rw primary-paths* [preference]
      |        |     |     +--rw preference            uint8
      |        |     |     +--rw tunnel-path-params
      |        |     |     |  +--rw path-named-constraint?   leafref {ietf-te-types:named-path-constraints}?
      |        |     |     |  +--rw path-selection
      |        |     |     |  |  +--rw topology?                 topology-id
      |        |     |     |  |  +--rw cost-limit?               uint32
      |        |     |     |  |  +--rw hop-limit?                uint8
      |        |     |     |  |  +--rw metric-type?              identityref
      |        |     |     |  |  +--rw tiebreaker-type?          identityref
      |        |     |     |  |  +--rw ignore-overload?          boolean
      |        |     |     |  |  +--rw tunnel-path-affinities {named-path-affinities}?
      |        |     |     |  |  |  +--rw (style)?
      |        |     |     |  |  |     +--:(values)
      |        |     |     |  |  |     |  +--rw value?         uint32
      |        |     |     |  |  |     |  +--rw mask?          uint32
      |        |     |     |  |  |     +--:(named)
      |        |     |     |  |  |        +--rw constraints* [usage]
      |        |     |     |  |  |           +--rw usage         identityref
      |        |     |     |  |  |           +--rw constraint
      |        |     |     |  |  |              +--rw affinity-names* [name]
      |        |     |     |  |  |                 +--rw name    string
      |        |     |     |  |  +--rw tunnel-path-srlgs
      |        |     |     |  |     +--rw (style)?
      |        |     |     |  |        +--:(values)
      |        |     |     |  |        |  +--rw usage?         identityref
      |        |     |     |  |        |  +--rw values*        srlg
      |        |     |     |  |        +--:(named)
      |        |     |     |  |           +--rw constraints* [usage]
      |        |     |     |  |              +--rw usage         identityref
      |        |     |     |  |              +--rw constraint
      |        |     |     |  |                 +--rw srlg-names* [name]
      |        |     |     |  |                    +--rw name    string
      |        |     |     |  +--rw (type)?
      |        |     |     |  |  +--:(dynamic)
      |        |     |     |  |  |  +--rw dynamic?                 empty
      |        |     |     |  |  +--:(explicit)
      |        |     |     |  |     +--rw explicit-path-name?      leafref
      |        |     |     |  +--rw no-cspf?                 empty
      |        |     |     |  +--rw lockdown?                empty
      |        |     |     +--rw seondary-paths* [preference]
      |        |     |        +--rw preference            uint8
      |        |     |        +--rw tunnel-path-params
      |        |     |           +--rw path-named-constraint?   leafref {ietf-te-types:named-path-constraints}?
      |        |     |           +--rw path-selection
      |        |     |           |  +--rw topology?                 topology-id
      |        |     |           |  +--rw cost-limit?               uint32
      |        |     |           |  +--rw hop-limit?                uint8
      |        |     |           |  +--rw metric-type?              identityref
      |        |     |           |  +--rw tiebreaker-type?          identityref
      |        |     |           |  +--rw ignore-overload?          boolean
      |        |     |           |  +--rw tunnel-path-affinities {named-path-affinities}?
      |        |     |           |  |  +--rw (style)?
      |        |     |           |  |     +--:(values)
      |        |     |           |  |     |  +--rw value?         uint32
      |        |     |           |  |     |  +--rw mask?          uint32
      |        |     |           |  |     +--:(named)
      |        |     |           |  |        +--rw constraints* [usage]
      |        |     |           |  |           +--rw usage         identityref
      |        |     |           |  |           +--rw constraint
      |        |     |           |  |              +--rw affinity-names* [name]
      |        |     |           |  |                 +--rw name    string
      |        |     |           |  +--rw tunnel-path-srlgs
      |        |     |           |     +--rw (style)?
      |        |     |           |        +--:(values)
      |        |     |           |        |  +--rw usage?         identityref
      |        |     |           |        |  +--rw values*        srlg
      |        |     |           |        +--:(named)
      |        |     |           |           +--rw constraints* [usage]
      |        |     |           |              +--rw usage         identityref
      |        |     |           |              +--rw constraint
      |        |     |           |                 +--rw srlg-names* [name]
      |        |     |           |                    +--rw name    string
      |        |     |           +--rw (type)?
      |        |     |           |  +--:(dynamic)
      |        |     |           |  |  +--rw dynamic?                 empty
      |        |     |           |  +--:(explicit)
      |        |     |           |     +--rw explicit-path-name?      leafref
      |        |     |           +--rw no-cspf?                 empty
      |        |     |           +--rw lockdown?                empty
      |        |     +--:(p2mp) {ietf-te-types:p2mp-te}?
      |        |        +--rw p2mp-paths* [destination]
      |        |           +--rw destination      inet:ip-address
      |        |           +--rw primary-paths* [preference]
      |        |              +--rw preference            uint8
      |        |              +--rw tunnel-path-params
      |        |              |  +--rw path-named-constraint?   leafref {ietf-te-types:named-path-constraints}?
      |        |              |  +--rw path-selection
      |        |              |  |  +--rw topology?                 topology-id
      |        |              |  |  +--rw cost-limit?               uint32
      |        |              |  |  +--rw hop-limit?                uint8
      |        |              |  |  +--rw metric-type?              identityref
      |        |              |  |  +--rw tiebreaker-type?          identityref
      |        |              |  |  +--rw ignore-overload?          boolean
      |        |              |  |  +--rw tunnel-path-affinities {named-path-affinities}?
      |        |              |  |  |  +--rw (style)?
      |        |              |  |  |     +--:(values)
      |        |              |  |  |     |  +--rw value?         uint32
      |        |              |  |  |     |  +--rw mask?          uint32
      |        |              |  |  |     +--:(named)
      |        |              |  |  |        +--rw constraints* [usage]
      |        |              |  |  |           +--rw usage         identityref
      |        |              |  |  |           +--rw constraint
      |        |              |  |  |              +--rw affinity-names* [name]
      |        |              |  |  |                 +--rw name    string
      |        |              |  |  +--rw tunnel-path-srlgs
      |        |              |  |     +--rw (style)?
      |        |              |  |        +--:(values)
      |        |              |  |        |  +--rw usage?         identityref
      |        |              |  |        |  +--rw values*        srlg
      |        |              |  |        +--:(named)
      |        |              |  |           +--rw constraints* [usage]
      |        |              |  |              +--rw usage         identityref
      |        |              |  |              +--rw constraint
      |        |              |  |                 +--rw srlg-names* [name]
      |        |              |  |                    +--rw name    string
      |        |              |  +--rw (type)?
      |        |              |  |  +--:(dynamic)
      |        |              |  |  |  +--rw dynamic?                 empty
      |        |              |  |  +--:(explicit)
      |        |              |  |     +--rw explicit-path-name?      leafref
      |        |              |  +--rw no-cspf?                 empty
      |        |              |  +--rw lockdown?                empty
      |        |              +--rw seondary-paths* [preference]
      |        |                 +--rw preference            uint8
      |        |                 +--rw tunnel-path-params
      |        |                    +--rw path-named-constraint?   leafref {ietf-te-types:named-path-constraints}?
      |        |                    +--rw path-selection
      |        |                    |  +--rw topology?                 topology-id
      |        |                    |  +--rw cost-limit?               uint32
      |        |                    |  +--rw hop-limit?                uint8
      |        |                    |  +--rw metric-type?              identityref
      |        |                    |  +--rw tiebreaker-type?          identityref
      |        |                    |  +--rw ignore-overload?          boolean
      |        |                    |  +--rw tunnel-path-affinities {named-path-affinities}?
      |        |                    |  |  +--rw (style)?
      |        |                    |  |     +--:(values)
      |        |                    |  |     |  +--rw value?         uint32
      |        |                    |  |     |  +--rw mask?          uint32
      |        |                    |  |     +--:(named)
      |        |                    |  |        +--rw constraints* [usage]
      |        |                    |  |           +--rw usage         identityref
      |        |                    |  |           +--rw constraint
      |        |                    |  |              +--rw affinity-names* [name]
      |        |                    |  |                 +--rw name    string
      |        |                    |  +--rw tunnel-path-srlgs
      |        |                    |     +--rw (style)?
      |        |                    |        +--:(values)
      |        |                    |        |  +--rw usage?         identityref
      |        |                    |        |  +--rw values*        srlg
      |        |                    |        +--:(named)
      |        |                    |           +--rw constraints* [usage]
      |        |                    |              +--rw usage         identityref
      |        |                    |              +--rw constraint
      |        |                    |                 +--rw srlg-names* [name]
      |        |                    |                    +--rw name    string
      |        |                    +--rw (type)?
      |        |                    |  +--:(dynamic)
      |        |                    |  |  +--rw dynamic?                 empty
      |        |                    |  +--:(explicit)
      |        |                    |     +--rw explicit-path-name?      leafref
      |        |                    +--rw no-cspf?                 empty
      |        |                    +--rw lockdown?                empty
      |        +--ro state
      |           +--ro description?            string
      |           +--ro admin-status?           identityref
      |           +--ro (routing-choice)?
      |           |  +--:(autoroute)
      |           |  |  +--ro autoroute-announce!
      |           |  |     +--ro routing-afs*       inet:ip-version
      |           |  |     +--ro (metric-type)?
      |           |  |        +--:(metric)
      |           |  |        |  +--ro metric?            uint32
      |           |  |        +--:(relative-metric)
      |           |  |        |  +--ro relative-metric?   int32
      |           |  |        +--:(absolute-metric)
      |           |  |           +--ro absolute-metric?   uint32
      |           |  +--:(forwarding-adjacency)
      |           |     +--ro forwarding-adjacency!
      |           |        +--ro holdtime?      uint32
      |           |        +--ro routing-afs*   inet:ip-version
      |           +--ro forwarding
      |           |  +--ro load-share?   uint32
      |           |  +--ro (policy-type)?
      |           |     +--:(class)
      |           |     |  +--ro class
      |           |     |     +--ro class?   uint8
      |           |     +--:(group)
      |           |        +--ro group
      |           |           +--ro classes*   uint8
      |           +--ro bidirectional
      |           |  +--ro association
      |           |     +--ro id?              uint16
      |           |     +--ro source?          inet:ip-address
      |           |     +--ro global-source?   inet:ip-address
      |           |     +--ro type?            identityref
      |           |     +--ro provisioing?     identityref
      |           +--ro (path-type)?
      |              +--:(p2p)
      |              |  +--ro destination?            inet:ip-address
      |              |  +--ro primary-paths* [preference]
      |              |     +--ro preference            uint8
      |              |     +--ro tunnel-path-params
      |              |     |  +--ro path-named-constraint?   leafref {ietf-te-types:named-path-constraints}?
      |              |     |  +--ro path-selection
      |              |     |  |  +--ro topology?                 topology-id
      |              |     |  |  +--ro cost-limit?               uint32
      |              |     |  |  +--ro hop-limit?                uint8
      |              |     |  |  +--ro metric-type?              identityref
      |              |     |  |  +--ro tiebreaker-type?          identityref
      |              |     |  |  +--ro ignore-overload?          boolean
      |              |     |  |  +--ro tunnel-path-affinities {named-path-affinities}?
      |              |     |  |  |  +--ro (style)?
      |              |     |  |  |     +--:(values)
      |              |     |  |  |     |  +--ro value?         uint32
      |              |     |  |  |     |  +--ro mask?          uint32
      |              |     |  |  |     +--:(named)
      |              |     |  |  |        +--ro constraints* [usage]
      |              |     |  |  |           +--ro usage         identityref
      |              |     |  |  |           +--ro constraint
      |              |     |  |  |              +--ro affinity-names* [name]
      |              |     |  |  |                 +--ro name    string
      |              |     |  |  +--ro tunnel-path-srlgs
      |              |     |  |     +--ro (style)?
      |              |     |  |        +--:(values)
      |              |     |  |        |  +--ro usage?         identityref
      |              |     |  |        |  +--ro values*        srlg
      |              |     |  |        +--:(named)
      |              |     |  |           +--ro constraints* [usage]
      |              |     |  |              +--ro usage         identityref
      |              |     |  |              +--ro constraint
      |              |     |  |                 +--ro srlg-names* [name]
      |              |     |  |                    +--ro name    string
      |              |     |  +--ro (type)?
      |              |     |  |  +--:(dynamic)
      |              |     |  |  |  +--ro dynamic?                 empty
      |              |     |  |  +--:(explicit)
      |              |     |  |     +--ro explicit-path-name?      leafref
      |              |     |  +--ro no-cspf?                 empty
      |              |     |  +--ro lockdown?                empty
      |              |     +--ro seondary-paths* [preference]
      |              |        +--ro preference            uint8
      |              |        +--ro tunnel-path-params
      |              |           +--ro path-named-constraint?   leafref {ietf-te-types:named-path-constraints}?
      |              |           +--ro path-selection
      |              |           |  +--ro topology?                 topology-id
      |              |           |  +--ro cost-limit?               uint32
      |              |           |  +--ro hop-limit?                uint8
      |              |           |  +--ro metric-type?              identityref
      |              |           |  +--ro tiebreaker-type?          identityref
      |              |           |  +--ro ignore-overload?          boolean
      |              |           |  +--ro tunnel-path-affinities {named-path-affinities}?
      |              |           |  |  +--ro (style)?
      |              |           |  |     +--:(values)
      |              |           |  |     |  +--ro value?         uint32
      |              |           |  |     |  +--ro mask?          uint32
      |              |           |  |     +--:(named)
      |              |           |  |        +--ro constraints* [usage]
      |              |           |  |           +--ro usage         identityref
      |              |           |  |           +--ro constraint
      |              |           |  |              +--ro affinity-names* [name]
      |              |           |  |                 +--ro name    string
      |              |           |  +--ro tunnel-path-srlgs
      |              |           |     +--ro (style)?
      |              |           |        +--:(values)
      |              |           |        |  +--ro usage?         identityref
      |              |           |        |  +--ro values*        srlg
      |              |           |        +--:(named)
      |              |           |           +--ro constraints* [usage]
      |              |           |              +--ro usage         identityref
      |              |           |              +--ro constraint
      |              |           |                 +--ro srlg-names* [name]
      |              |           |                    +--ro name    string
      |              |           +--ro (type)?
      |              |           |  +--:(dynamic)
      |              |           |  |  +--ro dynamic?                 empty
      |              |           |  +--:(explicit)
      |              |           |     +--ro explicit-path-name?      leafref
      |              |           +--ro no-cspf?                 empty
      |              |           +--ro lockdown?                empty
      |              +--:(p2mp) {ietf-te-types:p2mp-te}?
      |                 +--ro p2mp-paths* [destination]
      |                    +--ro destination      inet:ip-address
      |                    +--ro primary-paths* [preference]
      |                       +--ro preference            uint8
      |                       +--ro tunnel-path-params
      |                       |  +--ro path-named-constraint?   leafref {ietf-te-types:named-path-constraints}?
      |                       |  +--ro path-selection
      |                       |  |  +--ro topology?                 topology-id
      |                       |  |  +--ro cost-limit?               uint32
      |                       |  |  +--ro hop-limit?                uint8
      |                       |  |  +--ro metric-type?              identityref
      |                       |  |  +--ro tiebreaker-type?          identityref
      |                       |  |  +--ro ignore-overload?          boolean
      |                       |  |  +--ro tunnel-path-affinities {named-path-affinities}?
      |                       |  |  |  +--ro (style)?
      |                       |  |  |     +--:(values)
      |                       |  |  |     |  +--ro value?         uint32
      |                       |  |  |     |  +--ro mask?          uint32
      |                       |  |  |     +--:(named)
      |                       |  |  |        +--ro constraints* [usage]
      |                       |  |  |           +--ro usage         identityref
      |                       |  |  |           +--ro constraint
      |                       |  |  |              +--ro affinity-names* [name]
      |                       |  |  |                 +--ro name    string
      |                       |  |  +--ro tunnel-path-srlgs
      |                       |  |     +--ro (style)?
      |                       |  |        +--:(values)
      |                       |  |        |  +--ro usage?         identityref
      |                       |  |        |  +--ro values*        srlg
      |                       |  |        +--:(named)
      |                       |  |           +--ro constraints* [usage]
      |                       |  |              +--ro usage         identityref
      |                       |  |              +--ro constraint
      |                       |  |                 +--ro srlg-names* [name]
      |                       |  |                    +--ro name    string
      |                       |  +--ro (type)?
      |                       |  |  +--:(dynamic)
      |                       |  |  |  +--ro dynamic?                 empty
      |                       |  |  +--:(explicit)
      |                       |  |     +--ro explicit-path-name?      leafref
      |                       |  +--ro no-cspf?                 empty
      |                       |  +--ro lockdown?                empty
      |                       +--ro seondary-paths* [preference]
      |                          +--ro preference            uint8
      |                          +--ro tunnel-path-params
      |                             +--ro path-named-constraint?   leafref {ietf-te-types:named-path-constraints}?
      |                             +--ro path-selection
      |                             |  +--ro topology?                 topology-id
      |                             |  +--ro cost-limit?               uint32
      |                             |  +--ro hop-limit?                uint8
      |                             |  +--ro metric-type?              identityref
      |                             |  +--ro tiebreaker-type?          identityref
      |                             |  +--ro ignore-overload?          boolean
      |                             |  +--ro tunnel-path-affinities {named-path-affinities}?
      |                             |  |  +--ro (style)?
      |                             |  |     +--:(values)
      |                             |  |     |  +--ro value?         uint32
      |                             |  |     |  +--ro mask?          uint32
      |                             |  |     +--:(named)
      |                             |  |        +--ro constraints* [usage]
      |                             |  |           +--ro usage         identityref
      |                             |  |           +--ro constraint
      |                             |  |              +--ro affinity-names* [name]
      |                             |  |                 +--ro name    string
      |                             |  +--ro tunnel-path-srlgs
      |                             |     +--ro (style)?
      |                             |        +--:(values)
      |                             |        |  +--ro usage?         identityref
      |                             |        |  +--ro values*        srlg
      |                             |        +--:(named)
      |                             |           +--ro constraints* [usage]
      |                             |              +--ro usage         identityref
      |                             |              +--ro constraint
      |                             |                 +--ro srlg-names* [name]
      |                             |                    +--ro name    string
      |                             +--ro (type)?
      |                             |  +--:(dynamic)
      |                             |  |  +--ro dynamic?                 empty
      |                             |  +--:(explicit)
      |                             |     +--ro explicit-path-name?      leafref
      |                             +--ro no-cspf?                 empty
      |                             +--ro lockdown?                empty
      +--ro global-state
      +--ro interfaces-state
      |  +--ro interface* [interface]
      |     +--ro interface                         if:interface-ref
      |     +--ro interface-admission-state
      |     |  +--ro lsp* [source destination tunnel-id lsp-id]
      |     |     +--ro type?                 identityref
      |     |     +--ro source                leafref
      |     |     +--ro destination           leafref
      |     |     +--ro tunnel-id             leafref
      |     |     +--ro lsp-id                leafref
      |     |     +--ro extended-tunnel-id?   leafref
      |     |     +--ro lsp_rerouted?         empty
      |     +--ro interface-advertisements-state
      |        +--ro flood-interval?           uint32
      |        +--ro last-flooded-time?        uint32
      |        +--ro next-flooded-time?        uint32
      |        +--ro last-flooded-trigger?     enumeration
      |        +--ro advertized-level-areas* [level-area]
      |           +--ro level-area    uint32
      +--ro tunnels-state
      |  +--ro tunnel* [name type]
      |     +--ro name           string
      |     +--ro type           identityref
      |     +--ro identifier?    uint16
      |     +--ro oper-status?   identityref
      |     +--ro lsp* [source destination tunnel-id lsp-id]
      |        +--ro source                leafref
      |        +--ro destination           leafref
      |        +--ro tunnel-id             leafref
      |        +--ro lsp-id                leafref
      |        +--ro extended-tunnel-id?   leafref
      +--ro lsps-state
         +--ro lsp* [source destination tunnel-id lsp-id extended-tunnel-id]
            +--ro source                inet:ip-address
            +--ro destination           inet:ip-address
            +--ro tunnel-id             uint16
            +--ro lsp-id                uint16
            +--ro extended-tunnel-id    inet:ip-address
            +--ro oper-status?          identityref
            +--ro origin-type?          enumeration
            +--ro lsp-timers
            |  +--ro life-time?         uint32
            |  +--ro time-to-install?   uint32
            |  +--ro time-to-die?       uint32
            +--ro downstream-info
            |  +--ro nhop?                 inet:ip-address
            |  +--ro outgoing-interface?   if:interface-ref
            |  +--ro neighbor?             inet:ip-address
            |  +--ro label?                uint32
            +--ro upstream-info
               +--ro nhop?                 inet:ip-address
               +--ro incoming-interface?   if:interface-ref
               +--ro neighbor?             inet:ip-address
               +--ro label?                uint32
rpcs:
   +---x globals-rpc       
   +---x interfaces-rpc    
   +---x tunnels-rpc       
notifications:
   +---n globals-notif       
   +---n interfaces-notif    
   +---n tunnels-notif       
