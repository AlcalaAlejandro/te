module: ietf-te
   +--rw te!
   |  +--rw globals
   |  |  +--rw interface-named-admin-groups* [name] {ietf-te-types:extended-admin-groups,ietf-te-types:named-extended-admin-groups}?
   |  |  |  +--rw name     string
   |  |  |  +--rw group?   ietf-te-types:admin-groups
   |  |  +--rw interface-named-srlgs* [name] {ietf-te-types:named-srlg-groups}?
   |  |  |  +--rw name     string
   |  |  |  +--rw group?   ietf-te-types:srlg
   |  |  +--rw explicit-paths* [name]
   |  |  |  +--rw name                      string
   |  |  |  +--rw explicit-route-objects* [index]
   |  |  |     +--rw index                    uint8
   |  |  |     +--rw explicit-route-object
   |  |  |     |  +--rw (type)?
   |  |  |     |     +--:(ipv4-address)
   |  |  |     |     |  +--rw v4-address?         inet:ipv4-address
   |  |  |     |     |  +--rw v4-prefix-length?   uint8
   |  |  |     |     |  +--rw v4-loose?           boolean
   |  |  |     |     +--:(ipv6-address)
   |  |  |     |     |  +--rw v6-address?         inet:ipv6-address
   |  |  |     |     |  +--rw v6-prefix-length?   uint8
   |  |  |     |     |  +--rw v6-loose?           boolean
   |  |  |     |     +--:(as-number)
   |  |  |     |     |  +--rw as-number?          uint16
   |  |  |     |     +--:(unnumbered-link)
   |  |  |     |     |  +--rw router-id?          inet:ip-address
   |  |  |     |     |  +--rw interface-id?       uint32
   |  |  |     |     +--:(label)
   |  |  |     |        +--rw label_value?        uint32
   |  |  |     +--rw explicit-route-usage?    identityref
   |  |  +--rw path-named-constraints* [name] {ietf-te-types:named-path-constraints}?
   |  |     +--rw name                string
   |  |     +--rw path-constraints
   |  |        +--rw path-selection
   |  |           +--rw topology?          topology-id
   |  |           +--rw cost-limit?        uint32
   |  |           +--rw hop-limit?         uint8
   |  |           +--rw metric-type?       identityref
   |  |           +--rw tiebreaker-type?   identityref
   |  |           +--rw ignore-overload?   boolean
   |  |           +--rw path-affinities {ietf-te-types:named-path-affinities}?
   |  |           |  +--rw (style)?
   |  |           |     +--:(values)
   |  |           |     |  +--rw value?         uint32
   |  |           |     |  +--rw mask?          uint32
   |  |           |     +--:(named)
   |  |           |        +--rw constraints* [usage]
   |  |           |           +--rw usage         identityref
   |  |           |           +--rw constraint
   |  |           |              +--rw affinity-names* [name]
   |  |           |                 +--rw name    string
   |  |           +--rw path-srlgs
   |  |              +--rw (style)?
   |  |                 +--:(values)
   |  |                 |  +--rw usage?         constraint-usage-type
   |  |                 |  +--rw values*        srlg
   |  |                 +--:(named)
   |  |                    +--rw constraints* [usage]
   |  |                       +--rw usage         constraint-usage-type
   |  |                       +--rw constraint
   |  |                          +--rw srlg-names* [name]
   |  |                             +--rw name    string
   |  +--rw interfaces
   |  |  +--rw interface* [interface]
   |  |     +--rw interface                 if:interface-ref
   |  |     +--rw named-admin-groups* [named-admin-group] {ietf-te-types:extended-admin-groups,ietf-te-types:named-extended-admin-groups}?
   |  |     |  +--rw named-admin-group    leafref
   |  |     +--rw named-srlgs* [named-srlg] {ietf-te-types:named-srlg-groups}?
   |  |     |  +--rw named-srlg    leafref
   |  |     +--rw switching-capabilities* [switching-capability]
   |  |     |  +--rw capability?   identityref
   |  |     |  +--rw encoding?     identityref
   |  |     +--rw te-metric?                ietf-te-types:te-metric
   |  |     +--rw affinities
   |  |     |  +--rw (type)?
   |  |     |     +--:(admin-groups)
   |  |     |     |  +--rw admin-group?            admin-group
   |  |     |     +--:(extended-admin-groups) {extended-admin-groups}?
   |  |     |        +--rw extended-admin-group?   extended-admin-group
   |  |     +--rw srlgs
   |  |     |  +--rw (type)?
   |  |     |     +--:(srlg-name)
   |  |     |     |  +--rw names* [name]
   |  |     |     |     +--rw name    string
   |  |     |     +--:(srlg-value)
   |  |     |        +--rw values* [value]
   |  |     |           +--rw value    uint32
   |  |     +--rw (bc-model-type)?
   |  |     |  +--:(bc-model-rdm)
   |  |     |  |  +--rw bc-model-rdm
   |  |     |  |     +--rw bandwidth-psc-constraints
   |  |     |  |        +--rw maximum-reservable?   uint32
   |  |     |  |        +--rw bc-value*             uint32
   |  |     |  +--:(bc-model-mam)
   |  |     |  |  +--rw bc-model-mam
   |  |     |  |     +--rw bandwidth-psc-constraints
   |  |     |  |        +--rw maximum-reservable?   uint32
   |  |     |  |        +--rw bc-value*             uint32
   |  |     |  +--:(bc-model-mar)
   |  |     |     +--rw bc-model-mar
   |  |     |        +--rw bandwidth-psc-constraints
   |  |     |           +--rw maximum-reservable?   uint32
   |  |     |           +--rw bc-value*             uint32
   |  |     +--rw thresholds
   |  |     |  +--rw (type)?
   |  |     |     +--:(equal-steps)
   |  |     |     |  +--rw (equal-step-type)?
   |  |     |     |     +--:(up-down-different-step)
   |  |     |     |     |  +--rw up-step?      uint8
   |  |     |     |     |  +--rw down-step?    uint8
   |  |     |     |     +--:(up-down-same-step)
   |  |     |     |        +--rw step?         uint8
   |  |     |     +--:(unequal-steps)
   |  |     |        +--rw up-steps* [value]
   |  |     |        |  +--rw value    uint8
   |  |     |        +--rw down-steps* [value]
   |  |     |           +--rw value    uint8
   |  |     +--rw fast-reroute-backups {ietf-te-types:frr-te}?
   |  |        +--rw backup-capacity
   |  |        |  +--rw capacity?   uint32
   |  |        |  +--rw type?       uint32
   |  |        +--rw (type)?
   |  |           +--:(static-tunnel)
   |  |           |  +--rw name?              leafref
   |  |           |  +--rw static-backups* [backup-tunnel]
   |  |           |     +--rw backup-tunnel    leafref
   |  |           +--:(auto-tunnel)
   |  |              +--rw auto-backup!
   |  |                 +--rw method?             identityref
   |  |                 +--rw protection?         identityref
   |  |                 +--rw path-computation?   identityref
   |  +--rw tunnels
   |     +--rw tunnel* [name type]
   |        +--rw name                    string
   |        +--rw type                    identityref
   |        +--rw identifier?             uint16
   |        +--rw description?            string
   |        +--rw admin-status?           identityref
   |        +--rw (routing-choice)?
   |        |  +--:(autoroute)
   |        |  |  +--rw autoroute-announce!
   |        |  |     +--rw routing-afs*       inet:ip-version
   |        |  |     +--rw (metric-type)?
   |        |  |        +--:(metric)
   |        |  |        |  +--rw metric?            uint32
   |        |  |        +--:(relative-metric)
   |        |  |        |  +--rw relative-metric?   int32
   |        |  |        +--:(absolute-metric)
   |        |  |           +--rw absolute-metric?   uint32
   |        |  +--:(forwarding-adjacency)
   |        |     +--rw forwarding-adjacency!
   |        |        +--rw holdtime?      uint32
   |        |        +--rw routing-afs*   inet:ip-version
   |        +--rw forwarding
   |        |  +--rw load-share?   uint32
   |        |  +--rw (policy-type)?
   |        |     +--:(class)
   |        |     |  +--rw class
   |        |     |     +--rw class?   uint8
   |        |     +--:(group)
   |        |        +--rw group
   |        |           +--rw classes*   uint8
   |        +--rw bidirectional
   |        |  +--rw association
   |        |     +--rw id?              uint16
   |        |     +--rw source?          inet:ip-address
   |        |     +--rw global-source?   inet:ip-address
   |        |     +--rw type?            identityref
   |        |     +--rw provisioing?     identityref
   |        +--rw (path-type)?
   |           +--:(p2p)
   |           |  +--rw destination?            inet:ip-address
   |           |  +--rw primary-paths* [preference]
   |           |     +--rw preference         uint8
   |           |     +--rw path-properties
   |           |     |  +--rw path-named-constraint?   leafref {ietf-te-types:named-path-constraints}?
   |           |     |  +--rw path-constraints
   |           |     |  |  +--rw path-selection
   |           |     |  |     +--rw topology?          topology-id
   |           |     |  |     +--rw cost-limit?        uint32
   |           |     |  |     +--rw hop-limit?         uint8
   |           |     |  |     +--rw metric-type?       identityref
   |           |     |  |     +--rw tiebreaker-type?   identityref
   |           |     |  |     +--rw ignore-overload?   boolean
   |           |     |  |     +--rw path-affinities {ietf-te-types:named-path-affinities}?
   |           |     |  |     |  +--rw (style)?
   |           |     |  |     |     +--:(values)
   |           |     |  |     |     |  +--rw value?         uint32
   |           |     |  |     |     |  +--rw mask?          uint32
   |           |     |  |     |     +--:(named)
   |           |     |  |     |        +--rw constraints* [usage]
   |           |     |  |     |           +--rw usage         identityref
   |           |     |  |     |           +--rw constraint
   |           |     |  |     |              +--rw affinity-names* [name]
   |           |     |  |     |                 +--rw name    string
   |           |     |  |     +--rw path-srlgs
   |           |     |  |        +--rw (style)?
   |           |     |  |           +--:(values)
   |           |     |  |           |  +--rw usage?         constraint-usage-type
   |           |     |  |           |  +--rw values*        srlg
   |           |     |  |           +--:(named)
   |           |     |  |              +--rw constraints* [usage]
   |           |     |  |                 +--rw usage         constraint-usage-type
   |           |     |  |                 +--rw constraint
   |           |     |  |                    +--rw srlg-names* [name]
   |           |     |  |                       +--rw name    string
   |           |     |  +--rw (type)?
   |           |     |  |  +--:(dynamic)
   |           |     |  |  |  +--rw dynamic?                 empty
   |           |     |  |  +--:(explicit)
   |           |     |  |     +--rw explicit-path-name?      leafref
   |           |     |  +--rw no-cspf?                 empty
   |           |     |  +--rw lockdown?                empty
   |           |     +--rw seondary-paths* [preference]
   |           |        +--rw preference         uint8
   |           |        +--rw path-properties
   |           |           +--rw path-named-constraint?   leafref {ietf-te-types:named-path-constraints}?
   |           |           +--rw path-constraints
   |           |           |  +--rw path-selection
   |           |           |     +--rw topology?          topology-id
   |           |           |     +--rw cost-limit?        uint32
   |           |           |     +--rw hop-limit?         uint8
   |           |           |     +--rw metric-type?       identityref
   |           |           |     +--rw tiebreaker-type?   identityref
   |           |           |     +--rw ignore-overload?   boolean
   |           |           |     +--rw path-affinities {ietf-te-types:named-path-affinities}?
   |           |           |     |  +--rw (style)?
   |           |           |     |     +--:(values)
   |           |           |     |     |  +--rw value?         uint32
   |           |           |     |     |  +--rw mask?          uint32
   |           |           |     |     +--:(named)
   |           |           |     |        +--rw constraints* [usage]
   |           |           |     |           +--rw usage         identityref
   |           |           |     |           +--rw constraint
   |           |           |     |              +--rw affinity-names* [name]
   |           |           |     |                 +--rw name    string
   |           |           |     +--rw path-srlgs
   |           |           |        +--rw (style)?
   |           |           |           +--:(values)
   |           |           |           |  +--rw usage?         constraint-usage-type
   |           |           |           |  +--rw values*        srlg
   |           |           |           +--:(named)
   |           |           |              +--rw constraints* [usage]
   |           |           |                 +--rw usage         constraint-usage-type
   |           |           |                 +--rw constraint
   |           |           |                    +--rw srlg-names* [name]
   |           |           |                       +--rw name    string
   |           |           +--rw (type)?
   |           |           |  +--:(dynamic)
   |           |           |  |  +--rw dynamic?                 empty
   |           |           |  +--:(explicit)
   |           |           |     +--rw explicit-path-name?      leafref
   |           |           +--rw no-cspf?                 empty
   |           |           +--rw lockdown?                empty
   |           +--:(p2mp) {ietf-te-types:p2mp-te}?
   |              +--rw p2mp-paths* [destination]
   |                 +--rw destination      inet:ip-address
   |                 +--rw primary-paths* [preference]
   |                    +--rw preference         uint8
   |                    +--rw path-properties
   |                    |  +--rw path-named-constraint?   leafref {ietf-te-types:named-path-constraints}?
   |                    |  +--rw path-constraints
   |                    |  |  +--rw path-selection
   |                    |  |     +--rw topology?          topology-id
   |                    |  |     +--rw cost-limit?        uint32
   |                    |  |     +--rw hop-limit?         uint8
   |                    |  |     +--rw metric-type?       identityref
   |                    |  |     +--rw tiebreaker-type?   identityref
   |                    |  |     +--rw ignore-overload?   boolean
   |                    |  |     +--rw path-affinities {ietf-te-types:named-path-affinities}?
   |                    |  |     |  +--rw (style)?
   |                    |  |     |     +--:(values)
   |                    |  |     |     |  +--rw value?         uint32
   |                    |  |     |     |  +--rw mask?          uint32
   |                    |  |     |     +--:(named)
   |                    |  |     |        +--rw constraints* [usage]
   |                    |  |     |           +--rw usage         identityref
   |                    |  |     |           +--rw constraint
   |                    |  |     |              +--rw affinity-names* [name]
   |                    |  |     |                 +--rw name    string
   |                    |  |     +--rw path-srlgs
   |                    |  |        +--rw (style)?
   |                    |  |           +--:(values)
   |                    |  |           |  +--rw usage?         constraint-usage-type
   |                    |  |           |  +--rw values*        srlg
   |                    |  |           +--:(named)
   |                    |  |              +--rw constraints* [usage]
   |                    |  |                 +--rw usage         constraint-usage-type
   |                    |  |                 +--rw constraint
   |                    |  |                    +--rw srlg-names* [name]
   |                    |  |                       +--rw name    string
   |                    |  +--rw (type)?
   |                    |  |  +--:(dynamic)
   |                    |  |  |  +--rw dynamic?                 empty
   |                    |  |  +--:(explicit)
   |                    |  |     +--rw explicit-path-name?      leafref
   |                    |  +--rw no-cspf?                 empty
   |                    |  +--rw lockdown?                empty
   |                    +--rw seondary-paths* [preference]
   |                       +--rw preference         uint8
   |                       +--rw path-properties
   |                          +--rw path-named-constraint?   leafref {ietf-te-types:named-path-constraints}?
   |                          +--rw path-constraints
   |                          |  +--rw path-selection
   |                          |     +--rw topology?          topology-id
   |                          |     +--rw cost-limit?        uint32
   |                          |     +--rw hop-limit?         uint8
   |                          |     +--rw metric-type?       identityref
   |                          |     +--rw tiebreaker-type?   identityref
   |                          |     +--rw ignore-overload?   boolean
   |                          |     +--rw path-affinities {ietf-te-types:named-path-affinities}?
   |                          |     |  +--rw (style)?
   |                          |     |     +--:(values)
   |                          |     |     |  +--rw value?         uint32
   |                          |     |     |  +--rw mask?          uint32
   |                          |     |     +--:(named)
   |                          |     |        +--rw constraints* [usage]
   |                          |     |           +--rw usage         identityref
   |                          |     |           +--rw constraint
   |                          |     |              +--rw affinity-names* [name]
   |                          |     |                 +--rw name    string
   |                          |     +--rw path-srlgs
   |                          |        +--rw (style)?
   |                          |           +--:(values)
   |                          |           |  +--rw usage?         constraint-usage-type
   |                          |           |  +--rw values*        srlg
   |                          |           +--:(named)
   |                          |              +--rw constraints* [usage]
   |                          |                 +--rw usage         constraint-usage-type
   |                          |                 +--rw constraint
   |                          |                    +--rw srlg-names* [name]
   |                          |                       +--rw name    string
   |                          +--rw (type)?
   |                          |  +--:(dynamic)
   |                          |  |  +--rw dynamic?                 empty
   |                          |  +--:(explicit)
   |                          |     +--rw explicit-path-name?      leafref
   |                          +--rw no-cspf?                 empty
   |                          +--rw lockdown?                empty
   +--ro global-state
   +--ro interface-state
   +--ro tunnels-state
rpcs:
   +---x globals-rpc       
   +---x interfaces-rpc    
   +---x tunnels-rpc       
notifications:
   +---n globals-notif       
   +---n interfaces-notif    
   +---n tunnels-notif
